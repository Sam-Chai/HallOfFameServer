{
  "$schema": "node_modules/@biomejs/biome/configuration_schema.json",
  "extends": [
    "@toverux/blanc-hopital/biome/formatting",
    "@toverux/blanc-hopital/biome/all",
    "@toverux/blanc-hopital/biome/barrels",
    "@toverux/blanc-hopital/biome/vanilla",
    "@toverux/blanc-hopital/biome/node"
  ],
  "files": {
    "includes": ["**", "!package.json", "!efficientnetv2"]
  },
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "defaultBranch": "main",
    "useIgnoreFile": true
  },
  "linter": {
    "domains": {
      "next": "none",
      "react": "none",
      "solid": "none",
      "test": "none"
    },
    "rules": {
      "correctness": {
        // Not needed nor wanted in this project.
        "useImportExtensions": "off"
      },
      "style": {
        "useNamingConvention": {
          "level": "on",
          "options": {
            // Project was created without it, a bit annoying to change right now (database schema).
            "strictCase": false
          }
        }
      }
    }
  },
  "javascript": {
    "parser": {
      "unsafeParameterDecoratorsEnabled": true
    }
  },
  "overrides": [
    {
      "includes": ["**/*.command.ts"],
      "linter": {
        "rules": {
          "performance": {
            // In most CLI commands, either we need to await in loops for interactive CLIs, or we
            // don't really need speed at the expense of readability.
            "noAwaitInLoops": "off"
          },
          "style": {
            // In our setup, we can throw strings directly to display an error that is supposed to
            // terminate the command and exit with code 1.
            // In this only case, throwing string is OK and convenient.
            "useThrowOnlyError": "off"
          }
        }
      }
    }
  ]
}
