generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("HOF_DATABASE_URL")
}

model Creator {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime     @default(now())
  creatorName     String       @unique
  hashedCreatorId String       @unique
  ipAddresses     String[]
  screenshots     Screenshot[]

  @@map("creators")
}

model Screenshot {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @default(now())
  approved       Boolean  @default(false)
  views          Int      @default(0)
  ipAddress      String
  creatorId      String   @db.ObjectId
  creator        Creator  @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  cityName       String
  cityPopulation Int
  imageUrlFHD    String
  imageUrl4K     String

  @@index([createdAt])
  @@index([approved])
  @@index([createdAt, approved]) // for "recent" aggregation
  @@index([views])
  @@index([views, approved]) // for "low views" aggregation
  @@index([creatorId])
  @@index([creatorId, cityName])
  @@index([ipAddress])
  @@map("screenshots")
}

model Ban {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  bannedAt DateTime @default(now())
  reason   String

  // Either a Creator or an IP address can be banned.
  // If ipAddress is set, creatorId is null unless the creator was banned and
  // all their associated IP addresses were banned too.
  creatorId String? @db.ObjectId
  ipAddress String? @unique

  @@index([creatorId])
  @@map("bans")
}
